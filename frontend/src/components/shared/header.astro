---
import BtnLogout from "./btnLogout.astro";
import Input from "./input.astro";
const { user } = Astro.props;
let token = user.token;
let role = user.role;
let email = user.email;
---

<header
    class="px-8 py-4 bg-gray-800 border-b border-gray-700 flex md:justify-between items-center"
>
    <h1
        class="container text-center md:text-left mx-auto text-xl font-bold text-white m-0"
    >
        Hola {user.role}
        {user.email}
    </h1>
    <BtnLogout classText="flex w-full justify-end" />
    <Input type="hidden" value={email} id="emailuser" />
    <Input type="hidden" value={token} id="tokenuser" />
    <Input type="hidden" value={role} id="roleuser" />
</header>

<script>
    import {
        HTMLELEMENTS,
        REQUEST,
        ROLES,
        ROUTES,
        SOCKET,
        TOAST,
    } from "@/helpers/constants";
    import showToast from "@/utils/showToast";
    import { navigate } from "astro:transitions/client";
    import io from "socket.io-client";
    const emailUser = document.querySelector(
        HTMLELEMENTS.ID.EMAILUSER,
    ) as HTMLInputElement;
    const userRole = document.querySelector(
        HTMLELEMENTS.ID.ROLEUSER,
    ) as HTMLInputElement;
    const socket = io(SOCKET.SERVER);

    if (userRole.value === ROLES.USER) {
        socket.emit(SOCKET.EVENTS.USER.JOINUSER, emailUser.value);
        socket.on(
            SOCKET.EVENTS.USER.APPROVALNOTIFICATION,
            ({ accept, accepted }) => {
                if (accept === REQUEST.STATUS.ACCEPTED.ISACCEPTED)
                    showToast(
                        TOAST.TYPES.SUCCESS,
                        `Se ah aprobado el la solicitud de total de ${accepted.total_pokemons} pokemones con un valor de una medalla de ${accepted.medal.toLowerCase()}`,
                    );
                else
                    showToast(
                        TOAST.TYPES.ERROR,
                        `Se ah rechazado la solicitud de registro de total de ${accepted.total_pokemons} pokemones con un valor de una medalla de ${accepted.medal.toLowerCase()}`,
                    );
            },
        );
    } else {
        socket.emit(SOCKET.EVENTS.ADMIN.JOINADMIN, emailUser.value);

        socket.on(SOCKET.EVENTS.ADMIN.USERLOGGEDIN, (data) => {
            showToast(TOAST.TYPES.SUCCESS, SOCKET.MESSAGES.NEWUSER);
        });
        socket.on(SOCKET.EVENTS.ADMIN.USERUPLOAD, ({ user, accept }) => {
            showToast(
                TOAST.TYPES.SUCCESS,
                `El usuario ${user.username} ha enviado un registro con un total de ${accept.total_pokemons} pokemones para su aprobaciÃ³n`,
            );

            setTimeout(() => {
                navigate(ROUTES.ADMIN.ACCEPTREQUEST.PATH);
            }, 3000);
        });
    }
</script>
