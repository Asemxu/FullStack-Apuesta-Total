---
import Layout from "@/layouts/Layout.astro";
import MyMedals from "@/components/views/achievements/myMedals.astro";
import { actions } from "astro:actions";
import type { User } from "@/interfaces/user";
import { DEFAULTVALUES, MESSAGES, POKEMONS, ROUTES, STATUS } from "@/helpers/constants";
import isAdmin from "@/utils/isAdmin";
import { navigate } from "astro:transitions/client";
import ErrorMessage from "@/components/shared/errorMessage.astro";
const { data } = (await Astro.callAction(actions.getCookies, {})) || {};
let user: User;
if (data) {
    user = JSON.parse(data.value) as User;
    if (isAdmin(user.role)) return Astro.redirect(ROUTES.ADMIN.ACCEPTREQUEST);
} else {
    return Astro.redirect(ROUTES.LOGIN);
}

let totalPokemonsRegisters = POKEMONS.EMPTY;
const Error = {
    have : DEFAULTVALUES.NOTERROR,
    message : DEFAULTVALUES.EMPTY
}
const responsePokemonsRegisters = await fetch(
    `${import.meta.env.PUBLIC_URLAPI}user/totalRegisters`,
    {
        method: "GET",
        headers: {
            Authorization: "Bearer " + user.token,
        },
    },
);

if (responsePokemonsRegisters.ok) {
    const infoRegisters = await responsePokemonsRegisters.json()
    totalPokemonsRegisters = infoRegisters
} else {
    if (responsePokemonsRegisters.status === STATUS.HTTP.EXPIREDAUTHORIZATION) {
        await actions.clearCookies({});
        navigate(ROUTES.LOGIN);
    } else {
        Error.have = true
        Error.message = MESSAGES.HTTP.ERROR.UNEXPECTED.TEXT
    }
}
---

<Layout isUser>
    <div class="flex flex-col items-center pb-4">
        <h1 class="text-3xl font-bold text-white my-2">Mis Medallas</h1>
        <div class="flex gap-4 justify-between w-full items-center mb-4">
            <a
                href={ROUTES.USER.UPLOADPOKEMONS}
                class="text-white m-0 font-bold hover:text-gray-300 transition-colors duration-300"
            >
                &larr; Subir Pokemones
            </a>
            <span class="text-sm text-right">Total de Pokemones registrados: {totalPokemonsRegisters}</span
            >
        </div>

        {!Error.have ?  <MyMedals totalPokemons={totalPokemonsRegisters} /> : <ErrorMessage isHidenn={false} message={Error.message}/>}

    </div>
</Layout>
